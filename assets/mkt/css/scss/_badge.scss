//
// Override badge
//
// Badge
.badge {
  line-height: 1.5;

  h1 & {
    transform: translateY(-0.375rem);
  }
  h2 & {
    transform: translateY(-0.25rem);
  }
  h3 & {
    transform: translateY(-0.1875rem);
  }
  h4 & {
    transform: translateY(-0.125rem);
  }
  h5 & {
    transform: translateY(-0.125rem);
  }
  h6 & {
    transform: translateY(-0.0625rem);
  }
  .btn & {
    margin-left: 0.5rem;
  }
}

@each $color, $value in $theme-colors {
  .badge-#{$color} {
    @include badge-variant($value);

    color: $badge-color;
    @at-root a#{&} {
      @include hover-focus {
        color: $badge-color;
      }
    }

    @if $color == light {
      color: $badge-light-color;
      background-color: $badge-light-bg-color;

      @at-root a#{&} {
        @include hover-focus {
          color: $badge-light-color;
        }

        &:focus,
        &.focus {
          box-shadow: 0 0 0 $badge-focus-width rgba($badge-light-bg-color, 1);
        }
      }
    }
    
  }
}


// Badge outlines
@each $color, $value in $theme-colors {
  .badge-outline-#{$color} {
    @include badge-outline-variant($value);

    padding: $badge-outline-padding-y $badge-outline-padding-x;

    @if $color == light {
      color: $badge-light-color;
      border-color: $badge-outline-light-border-color;

      @at-root a#{&} {
        @include hover-focus {
          color: $badge-light-color;
        }

        &:focus,
        &.focus {
          box-shadow: 0 0 0 $badge-focus-width rgba($badge-light-bg-color, 1);
        }
      }
    } @else if $color == dark {
      color: $badge-outline-dark-color;
      border-color: $badge-outline-dark-color;
    }
  }
}
